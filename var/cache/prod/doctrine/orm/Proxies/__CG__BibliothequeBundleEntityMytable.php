<?php

namespace Proxies\__CG__\BibliothequeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Mytable extends \BibliothequeBundle\Entity\Mytable implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'idface', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'reseau', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'zone', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'region', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'regie', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'support', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'format', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'type', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'codeFace', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'departement', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'xPanneau', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'yPanneau', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'adresse', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'emplacement', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'trafficRoutier2017', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'map', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'photo'];
        }

        return ['__isInitialized__', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'idface', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'reseau', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'zone', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'region', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'regie', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'support', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'format', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'type', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'codeFace', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'departement', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'xPanneau', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'yPanneau', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'adresse', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'emplacement', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'trafficRoutier2017', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'map', '' . "\0" . 'BibliothequeBundle\\Entity\\Mytable' . "\0" . 'photo'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Mytable $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdface()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdface();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdface', []);

        return parent::getIdface();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdface($idface)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdface', [$idface]);

        return parent::setIdface($idface);
    }

    /**
     * {@inheritDoc}
     */
    public function getReseau()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReseau', []);

        return parent::getReseau();
    }

    /**
     * {@inheritDoc}
     */
    public function setReseau($reseau)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReseau', [$reseau]);

        return parent::setReseau($reseau);
    }

    /**
     * {@inheritDoc}
     */
    public function getZone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZone', []);

        return parent::getZone();
    }

    /**
     * {@inheritDoc}
     */
    public function setZone($zone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZone', [$zone]);

        return parent::setZone($zone);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', []);

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion($region)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', [$region]);

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegie', []);

        return parent::getRegie();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegie($regie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegie', [$regie]);

        return parent::setRegie($regie);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupport', []);

        return parent::getSupport();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupport($support)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupport', [$support]);

        return parent::setSupport($support);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormat', []);

        return parent::getFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormat($format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormat', [$format]);

        return parent::setFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeFace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeFace', []);

        return parent::getCodeFace();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeFace($codeFace)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeFace', [$codeFace]);

        return parent::setCodeFace($codeFace);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartement', []);

        return parent::getDepartement();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartement($departement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartement', [$departement]);

        return parent::setDepartement($departement);
    }

    /**
     * {@inheritDoc}
     */
    public function getXPanneau()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXPanneau', []);

        return parent::getXPanneau();
    }

    /**
     * {@inheritDoc}
     */
    public function setXPanneau($xPanneau)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXPanneau', [$xPanneau]);

        return parent::setXPanneau($xPanneau);
    }

    /**
     * {@inheritDoc}
     */
    public function getYPanneau()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYPanneau', []);

        return parent::getYPanneau();
    }

    /**
     * {@inheritDoc}
     */
    public function setYPanneau($yPanneau)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYPanneau', [$yPanneau]);

        return parent::setYPanneau($yPanneau);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse($adresse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmplacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmplacement', []);

        return parent::getEmplacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmplacement($emplacement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmplacement', [$emplacement]);

        return parent::setEmplacement($emplacement);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrafficRoutier2017()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrafficRoutier2017', []);

        return parent::getTrafficRoutier2017();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrafficRoutier2017($trafficRoutier2017)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrafficRoutier2017', [$trafficRoutier2017]);

        return parent::setTrafficRoutier2017($trafficRoutier2017);
    }

    /**
     * {@inheritDoc}
     */
    public function getMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMap', []);

        return parent::getMap();
    }

    /**
     * {@inheritDoc}
     */
    public function setMap($map)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMap', [$map]);

        return parent::setMap($map);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

}
